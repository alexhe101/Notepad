package application;

import javafx.fxml.FXML;

import java.awt.List;
import java.awt.PageAttributes.OriginType;
import java.awt.print.Printable;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Optional;
import java.util.spi.LocaleServiceProvider;

import org.omg.CORBA.PRIVATE_MEMBER;

import javafx.application.Platform;
import javafx.beans.InvalidationListener;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;

import javafx.scene.control.MenuItem;

import javafx.scene.control.Label;

import javafx.scene.control.TextArea;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyCodeCombination;
import javafx.scene.input.KeyCombination;
import javafx.scene.layout.BorderPane;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.ButtonBar.ButtonData;
import javafx.scene.control.ButtonType;
import javafx.scene.control.CheckMenuItem;
import javafx.scene.control.ChoiceDialog;
import javafx.scene.control.Dialog;

public class MainScreenController {
	private boolean unsaveFlag=false;
	private File currentFile;
	private String currentTitle="无标题";
	private String currentAbsoultPath="无标题";
	@FXML
	private BorderPane borderPane;
	@FXML
	private MenuItem newButton;
	@FXML
	private MenuItem newWindowButton;
	@FXML
	private MenuItem openButton;
	@FXML
	private MenuItem saveButton;
	@FXML
	private MenuItem saveAsButton;
	@FXML
	private MenuItem exitButton;
	@FXML
	private MenuItem cancelButton;
	@FXML
	private MenuItem cutButton;
	@FXML
	private MenuItem copyButton;
	@FXML
	private MenuItem pasteButton;
	@FXML
	private MenuItem deleteButton;
	@FXML
	private MenuItem findButton;
	@FXML
	private MenuItem findNext;
	@FXML
	private MenuItem findPrev;
	@FXML
	private MenuItem replaceButton;
	@FXML
	private MenuItem turnButton;
	@FXML
	private MenuItem selectAllButton;
	@FXML
	private MenuItem timeButton;
	@FXML
	private CheckMenuItem changLineCheck;
	@FXML
	private MenuItem frontMenuItem;
	@FXML
	private MenuItem scaleUpButton;
	@FXML
	private MenuItem scaleDownButton;
	@FXML
	private MenuItem resetButton;
	@FXML
	private CheckMenuItem statusCheck;
	@FXML
	private MenuItem aboutButton;
	@FXML
	private TextArea textArea;
	@FXML
	private Label indexLabel;
	@FXML
	private Label zoomLabel;
	private void textIni() {
		// TODO Auto-generated method stub

		currentFile=null;
		currentTitle = "无标题";
		currentAbsoultPath = "无标题";
		textArea.clear();
		unsaveFlag  = false;
		Stage s = (Stage)(borderPane.getScene().getWindow());

		s.setTitle(String.format("%s-记事本",currentTitle));
		
	}
	// Event Listener on MenuItem[#newButton].onAction
	@FXML
	public void clickNewFileButton(ActionEvent event) {
		// TODO Autogenerated
		if(unsaveFlag)
		{
			int result = DialogControl.unsavePrompt(currentAbsoultPath);
			if(result!=1)
			{
				if(result==0)
				{
					clickSaveFileButton(event);
					clickNewFileButton(event);
				}
				textIni();
			}
		}
		
	}
	// Event Listener on MenuItem[#newWindowButton].onAction
	@FXML
	public void clickNewWindowButton(ActionEvent event) {
		// TODO Autogenerated
		 Platform.runLater(new Runnable() {
		       public void run() {             
		           try {
					new StageControl().start(new Stage());
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		       }
		 });
	}
	// Event Listener on MenuItem[#openButton].onAction
	@FXML
	public void clickOpenFileButton(ActionEvent event) {
		// TODO Autogenerated
		if(unsaveFlag)
		{
			int result = DialogControl.unsavePrompt(currentAbsoultPath);
			if(result==0)
			{
				clickSaveFileButton(event);
			}else if(result==1)
			{
				return;
			}
		}

		FileChooser fc= new FileChooser();
		fc.setTitle("打开");
		fc.getExtensionFilters().addAll(
                new FileChooser.ExtensionFilter("文本文档", "*.txt*"),
                new FileChooser.ExtensionFilter("所有文件", "*.")
        );
		File nf = fc.showOpenDialog(borderPane.getScene().getWindow());
		if(nf!=null)
		{
			currentFile = nf;
			try {
				String tmpString = FileOperator.readFile(currentFile);
				
				currentTitle = currentFile.getName();
				textArea.setText(tmpString);
				currentAbsoultPath = currentFile.getAbsolutePath();
				unsaveFlag = false;
				Stage s = (Stage)(borderPane.getScene().getWindow());
				s.setTitle(String.format("%s-记事本",currentTitle));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				DialogControl.showFileOpenError();
			}
		}
		
	}
	// Event Listener on MenuItem[#saveButton].onAction
	@FXML
	public void clickSaveFileButton(ActionEvent event) {
		// TODO Autogenerated
		if(currentFile==null)
		{
			clickSaveAsButton(event);
		}else {
			try {
				FileOperator.writeFile(currentFile, textArea.getText());
				unsaveFlag = false;
				Stage s = (Stage)(borderPane.getScene().getWindow());
				s.setTitle(String.format("%s-记事本",currentTitle));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				DialogControl.showFileSaveError();
			}
		}
	}
	// Event Listener on MenuItem[#saveAsButton].onAction
	@FXML
	public void clickSaveAsButton(ActionEvent event) {
		FileChooser fc= new FileChooser();
		fc.setTitle("另存为");
		fc.getExtensionFilters().addAll(
                new FileChooser.ExtensionFilter("文本文档", "*.txt*"),
                new FileChooser.ExtensionFilter("所有文件", "*.")
        );
		fc.setInitialFileName("*.txt");
		currentFile = fc.showSaveDialog(borderPane.getScene().getWindow());
		if(currentFile!=null)
		{
			try {
				FileOperator.writeFile(currentFile,textArea.getText());				
				currentTitle = currentFile.getName();
				textArea.setText(textArea.getText());
				currentAbsoultPath = currentFile.getAbsolutePath();
				unsaveFlag = false;
				Stage s = (Stage)(borderPane.getScene().getWindow());
				s.setTitle(String.format("%s-记事本",currentTitle));
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				DialogControl.showFileSaveError();
			}
		}
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#exitButton].onAction
	@FXML
	public void clickExitButton(ActionEvent event) {
		// TODO Autogenerated
		if(unsaveFlag)
		{
			int result = DialogControl.unsavePrompt(currentAbsoultPath);
			if(result!=1)
			{
				if(result==0)
				{
					clickSaveFileButton(event);
				}
				System.exit(0);
			}
		}
	}
	// Event Listener on MenuItem[#cancelButton].onAction
	@FXML
	public void clickCancelButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#cutButton].onAction
	@FXML
	public void clickCutButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#copyButton].onAction
	@FXML
	public void clickCopyButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#pasteButton].onAction
	@FXML
	public void clickPasteButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#deleteButton].onAction
	@FXML
	public void clickDeleteButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#findButton].onAction
	@FXML
	public void clickFindButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#findNext].onAction
	@FXML
	public void clickFindNextButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#findPrev].onAction
	@FXML
	public void clickFindPrevButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#replaceButton].onAction
	@FXML
	public void clickReplaceButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#turnButton].onAction
	@FXML
	public void clickTurnButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#selectAllButton].onAction
	@FXML
	public void clickSelectAllButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#timeButton].onAction
	@FXML
	public void clickTimeButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on CheckMenuItem[#changLineCheck].onAction
	@FXML
	public void clickChangeLineCheck(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#frontMenuItem].onAction
	@FXML
	public void clickFrontMenuItem(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#scaleUpButton].onAction
	@FXML
	public void clickZoomUpButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#scaleDownButton].onAction
	@FXML
	public void clickZoomDownButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#resetButton].onAction
	@FXML
	public void clickResetButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on CheckMenuItem[#statusCheck].onAction
	@FXML
	public void ClickStatusCheckButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on MenuItem[#aboutButton].onAction
	@FXML
	public void clickAboutButton(ActionEvent event) {
		// TODO Autogenerated
	}
	public void initialize() {
		textArea.textProperty().addListener(new ChangeListener<String>() {
			@Override
			public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
				// TODO Auto-generated method stub
				Stage s = (Stage)(borderPane.getScene().getWindow());
				if(!newValue.equals(oldValue))
				{
					unsaveFlag = true;
					s.setTitle(String.format("*%s-记事本",currentTitle));
				}
			}
		
		});
		
	}
}

